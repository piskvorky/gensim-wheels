env:
    global:
        - REPO_DIR=gensim
        - BUILD_COMMIT=4.1.0
        - UNICODE_WIDTH=32
        - MACOSX_DEPLOYMENT_TARGET=10.9
        #
        # The contents of this file mirror the linux_testenv list
        # in gensim's setup.py.  I can't think of a better way to include
        # them here for now.  They'll get picked up by the multibuild stuff
        # running in multibuild/common_utils.sh.
        #
        - TEST_DEPENDS="pytest mock cython nmslib pyemd testfixtures Morfessor==2.0.2a4 python-Levenshtein>=0.10.2 scikit-learn visdom>=0.1.8,!=0.1.8.7 pyemd"
        #
        # Build wheels with the oldest possible numpy version to avoid
        # the problem encountered by:
        #
        # https://github.com/RaRe-Technologies/gensim/issues/3085
        #
        - BUILD_DEPENDS="oldest-supported-numpy"

        #
        # We need this for Linux builds, but it won't hurt to have this
        # consistently set both for Linux and MacOS.
        #
        - CFLAGS=-std=c99

language: python
os: linux

#
# https://docs.travis-ci.com/user/reference/focal/
#
dist: focal
services: docker

jobs:
  # Linux
  - os: linux
    env:
      - MB_PYTHON_VERSION=3.6
      - PLAT=x86_64

  - os: linux
    env:
      - MB_PYTHON_VERSION=3.7
      - PLAT=x86_64
      - SKIP_NETWORK_TESTS=1


  - os: linux
    env:
      - MB_PYTHON_VERSION=3.8
      - PLAT=x86_64
      - SKIP_NETWORK_TESTS=1


  # MacOS
  - os: osx
    language: generic
    osx_image: xcode10.1
    env:
      - MB_PYTHON_VERSION=3.6
      - SKIP_NETWORK_TESTS=1

  - os: osx
    language: generic
    env:
      - MB_PYTHON_VERSION=3.7
      - SKIP_NETWORK_TESTS=1

  - os: osx
    language: generic
    env:
      - MB_PYTHON_VERSION=3.8
      - SKIP_NETWORK_TESTS=1


before_install:
    - source multibuild/common_utils.sh
    - source multibuild/travis_steps.sh
    - before_install

install:
    - clean_code $REPO_DIR $BUILD_COMMIT
    - build_wheel $REPO_DIR $PLAT

script:
    - install_run $PLAT


# Upload wheels at the end of process (no matters, success or fail)
after_success:
    - ls -laht ${TRAVIS_BUILD_DIR}/wheelhouse/
    - pip install wheelhouse-uploader
    - python -m wheelhouse_uploader upload --local-folder ${TRAVIS_BUILD_DIR}/wheelhouse/ --no-ssl-check gensim-wheels --provider S3 --no-enable-cdn

after_failure:
    - ls -laht ${TRAVIS_BUILD_DIR}/wheelhouse/
    - pip install wheelhouse-uploader
    - python -m wheelhouse_uploader upload --local-folder ${TRAVIS_BUILD_DIR}/wheelhouse/ --no-ssl-check gensim-wheels --provider S3 --no-enable-cdn
