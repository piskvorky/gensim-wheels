environment:
  global:
    BUILD_COMMIT: 4.1.0
    # SDK v7.0 MSVC Express 2008's SetEnv.cmd script will fail if the
    # /E:ON and /V:ON options are not enabled in the batch script intepreter
    # See: http://stackoverflow.com/a/13751649/163740
    CMD_IN_ENV: "cmd /E:ON /V:ON /C ..\\appveyor\\run_with_env.cmd"
    WHEELHOUSE_UPLOADER_USERNAME:
      secure: 5XWj5Siu0pGOPKzx6VOe/mq23+9vbvzBsAA+UFvtFvw=
    WHEELHOUSE_UPLOADER_SECRET:
      secure: CKjewPPfH6vXYbZYZnF+w05yoA4HUwOcxmxnahDzT3xlB1F5kx9ng0u8mDUR++Wh
    #
    # We call these variables BUILD_DEPENDS and TEST_DEPENDS to mimick the
    # multibuild setup on Travis. Unlike with Travis, there are no bash scripts
    # that expect those variables - we use them directly in this YAML file and
    # that's it.
    #
    # The contents of this file mirror the linux_testenv list
    # in gensim's setup.py.  I can't think of a better way to include
    # them here for now.
    #
    TEST_DEPENDS: "pytest mock cython nmslib pyemd testfixtures Morfessor==2.0.2a4 python-Levenshtein>=0.10.2 scikit-learn"
    #
    # Build wheels with the oldest possible numpy version to avoid
    # the problem encountered by:
    #
    # https://github.com/RaRe-Technologies/gensim/issues/3085
    #
    BUILD_DEPENDS: "oldest-supported-numpy"

  matrix:
    #   - PYTHON: "C:\\Python36-x64"
    #     PYTHON_VERSION: "3.6.0"
    #     PYTHON_ARCH: "64"
    #
    #   - PYTHON: "C:\\Python37-x64"
    #     PYTHON_VERSION: "3.7.0"
    #     PYTHON_ARCH: "64"
    #
    #   - PYTHON: "C:\\Python38-x64"
    #     PYTHON_VERSION: "3.8.0"
    #     PYTHON_ARCH: "64"

    - PYTHON: "C:\\Python39-x64"
      PYTHON_VERSION: "3.9.1"
      PYTHON_ARCH: "64"
      #
      # I'm unable to install oldest-supported-numpy for Py3.9 on Windows for
      # some unknown reason, so we specify the numpy version manually here.
      #
      BUILD_DEPENDS: "numpy==1.19.3"


install:
  # Check that we have the expected version and architecture for Python
  - "python --version"
  - "python -c \"import struct; print(struct.calcsize('P') * 8)\""

  - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"
  - "python -m pip install -U pip setuptools wheel wheelhouse_uploader %BUILD_DEPENDS%"

  - "git submodule update --init --recursive"
  - "cd gensim"
  - "git checkout %BUILD_COMMIT%"
  - "git clean -fxd"
  - "git reset --hard"

  # Install the build and runtime dependencies of the project.
  - "%CMD_IN_ENV% python setup.py bdist_wheel"
  - ps: "ls dist"

  # Install the generated wheel package to test it
  - "pip --version"
  - "python ../install_wheel.py"


build: false

test_script:
  - "cd .."
  - "mkdir empty_folder"
  - "cd empty_folder"
  - "SET PYTHONHASHSEED=1"
  - "pip install %TEST_DEPENDS%"
  - "pytest -rfxEXs --durations=20 --disable-warnings --showlocals --pyargs gensim"


# Upload wheels at the end of process (no matters, success or fail)
on_finish:
  - "ls -laht ../gensim/dist/"
  - "python -m wheelhouse_uploader upload --no-ssl-check --local-folder=../gensim/dist/  gensim-wheels --provider S3 --no-enable-cdn"
